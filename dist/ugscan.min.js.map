{"version":3,"file":"ugscan.min.js","sources":["../src/MTLLoader.js","../src/OBJLoader.js","../src/OrbitControls.js","../src/UGBLoader.js","../src/UGCloud.js"],"sourcesContent":["import {\r\n\tColor,\r\n\tDefaultLoadingManager,\r\n\tFileLoader,\r\n\tFrontSide,\r\n\tLoader,\r\n\tLoaderUtils,\r\n\tMeshPhongMaterial,\r\n\tRepeatWrapping,\r\n\tTextureLoader,\r\n\tVector2,\r\n\tTexture,\r\n\tsRGBEncoding\r\n} from 'three';\r\n\r\n\r\n/**\r\n * Loads a Wavefront .mtl file specifying materials\r\n */\r\n\r\nclass MTLLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads and parses a MTL asset from a URL.\r\n\t *\r\n\t * @param {String} url - URL to the MTL file.\r\n\t * @param {Function} [onLoad] - Callback invoked with the loaded object.\r\n\t * @param {Function} [onProgress] - Callback for download progress.\r\n\t * @param {Function} [onError] - Callback for download errors.\r\n\t *\r\n\t * @see setPath setResourcePath\r\n\t *\r\n\t * @note In order for relative texture references to resolve correctly\r\n\t * you must call setResourcePath() explicitly prior to load.\r\n\t */\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t// loader.load( url, function ( text ) {\r\n\t\tlet pathName = this.fileMap.get(url)\r\n\t\tthis.zip.file(pathName).async('string').then(function (text) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text, path ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tsetMaterialOptions( value ) {\r\n\r\n\t\tthis.materialOptions = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZip( zip ) {\r\n\t\tthis.zip = zip;\r\n\t\tthis.fileMap = new Map();\r\n\t\tfor (const pathName in zip.files) {\r\n\t\t\tif (Object.prototype.hasOwnProperty.call(zip.files, pathName)) {\t\t\t\t\r\n\t\t\t\tconst fileName = pathName.substring(pathName.lastIndexOf('/') + 1);\r\n\t\t\t\tthis.fileMap.set(fileName, zip.files[pathName].name);\r\n\t\t    }\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses a MTL file.\r\n\t *\r\n\t * @param {String} text - Content of MTL file\r\n\t * @return {MaterialCreator}\r\n\t *\r\n\t * @see setPath setResourcePath\r\n\t *\r\n\t * @note In order for relative texture references to resolve correctly\r\n\t * you must call setResourcePath() explicitly prior to parse.\r\n\t */\r\n\tparse( text, path ) {\r\n\r\n\t\tconst lines = text.split( '\\n' );\r\n\t\tlet info = {};\r\n\t\tconst delimiter_pattern = /\\s+/;\r\n\t\tconst materialsInfo = {};\r\n\r\n\t\tfor ( let i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlet line = lines[ i ];\r\n\t\t\tline = line.trim();\r\n\r\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\r\n\r\n\t\t\t\t// Blank line or comment ignore\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst pos = line.indexOf( ' ' );\r\n\r\n\t\t\tlet key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\r\n\t\t\tkey = key.toLowerCase();\r\n\r\n\t\t\tlet value = ( pos >= 0 ) ? line.substring( pos + 1 ) : '';\r\n\t\t\tvalue = value.trim();\r\n\r\n\t\t\tif ( key === 'newmtl' ) {\r\n\r\n\t\t\t\t// New material\r\n\r\n\t\t\t\tinfo = { name: value };\r\n\t\t\t\tmaterialsInfo[ value ] = info;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( key === 'ka' || key === 'kd' || key === 'ks' || key === 'ke' ) {\r\n\r\n\t\t\t\t\tconst ss = value.split( delimiter_pattern, 3 );\r\n\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tinfo[ key ] = value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst materialCreator = new MaterialCreator( this.resourcePath || path, this.materialOptions );\r\n\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\r\n\t\tmaterialCreator.setManager( this.manager );\r\n\t\tmaterialCreator.setMaterials( materialsInfo );\r\n\t\tmaterialCreator.setFileMap(this.fileMap);\r\n\t\tmaterialCreator.setZip(this.zip);\r\n\t\treturn materialCreator;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Create a new MTLLoader.MaterialCreator\r\n * @param baseUrl - Url relative to which textures are loaded\r\n * @param options - Set of options on how to construct the materials\r\n *                  side: Which side to apply the material\r\n *                        FrontSide (default), THREE.BackSide, THREE.DoubleSide\r\n *                  wrap: What type of wrapping to apply for textures\r\n *                        RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\r\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\r\n *                                Default: false, assumed to be already normalized\r\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\r\n *                                  Default: false\r\n * @constructor\r\n */\r\n\r\nclass MaterialCreator {\r\n\r\n\tconstructor( baseUrl = '', options = {} ) {\r\n\r\n\t\tthis.baseUrl = baseUrl;\r\n\t\tthis.options = options;\r\n\t\tthis.materialsInfo = {};\r\n\t\tthis.materials = {};\r\n\t\tthis.materialsArray = [];\r\n\t\tthis.nameLookup = {};\r\n\r\n\t\tthis.crossOrigin = 'anonymous';\r\n\r\n\t\t// this.side = THREE.DoubleSide;// ( this.options.side !== undefined ) ? this.options.side : DoubleSide;\r\n\t\t// this.side = ( this.options.side !== undefined ) ? this.options.side : THREE.DoubleSide;\r\n\t\tthis.wrap = ( this.options.wrap !== undefined ) ? this.options.wrap : RepeatWrapping;\r\n\r\n\t}\r\n\r\n\tsetFileMap(fileMap) {\r\n\t\tthis.fileMap = fileMap;\r\n\t}\r\n\r\n\tsetZip(zip) {\r\n\t\tthis.zip = zip;\r\n\t}\r\n\r\n\tsetCrossOrigin( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetManager( value ) {\r\n\r\n\t\tthis.manager = value;\r\n\r\n\t}\r\n\r\n\tsetMaterials( materialsInfo ) {\r\n\r\n\t\tthis.materialsInfo = this.convert( materialsInfo );\r\n\t\tthis.materials = {};\r\n\t\tthis.materialsArray = [];\r\n\t\tthis.nameLookup = {};\r\n\r\n\t}\r\n\r\n\tconvert( materialsInfo ) {\r\n\r\n\t\tif ( ! this.options ) return materialsInfo;\r\n\r\n\t\tconst converted = {};\r\n\r\n\t\tfor ( const mn in materialsInfo ) {\r\n\r\n\t\t\t// Convert materials info into normalized form based on options\r\n\r\n\t\t\tconst mat = materialsInfo[ mn ];\r\n\r\n\t\t\tconst covmat = {};\r\n\r\n\t\t\tconverted[ mn ] = covmat;\r\n\r\n\t\t\tfor ( const prop in mat ) {\r\n\r\n\t\t\t\tlet save = true;\r\n\t\t\t\tlet value = mat[ prop ];\r\n\t\t\t\tconst lprop = prop.toLowerCase();\r\n\r\n\t\t\t\tswitch ( lprop ) {\r\n\r\n\t\t\t\t\tcase 'kd':\r\n\t\t\t\t\tcase 'ka':\r\n\t\t\t\t\tcase 'ks':\r\n\r\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\r\n\r\n\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\r\n\r\n\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\r\n\r\n\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 2 ] === 0 ) {\r\n\r\n\t\t\t\t\t\t\t\t// ignore\r\n\r\n\t\t\t\t\t\t\t\tsave = false;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( save ) {\r\n\r\n\t\t\t\t\tcovmat[ lprop ] = value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn converted;\r\n\r\n\t}\r\n\r\n\tpreload() {\r\n\r\n\t\tfor ( const mn in this.materialsInfo ) {\r\n\r\n\t\t\tthis.create( mn );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetIndex( materialName ) {\r\n\r\n\t\treturn this.nameLookup[ materialName ];\r\n\r\n\t}\r\n\r\n\tgetAsArray() {\r\n\r\n\t\tlet index = 0;\r\n\r\n\t\tfor ( const mn in this.materialsInfo ) {\r\n\r\n\t\t\tthis.materialsArray[ index ] = this.create( mn );\r\n\t\t\tthis.nameLookup[ mn ] = index;\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.materialsArray;\r\n\r\n\t}\r\n\r\n\tcreate( materialName ) {\r\n\r\n\t\tif ( this.materials[ materialName ] === undefined ) {\r\n\r\n\t\t\tthis.createMaterial_( materialName );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.materials[ materialName ];\r\n\r\n\t}\r\n\r\n\tcreateMaterial_( materialName ) {\r\n\r\n\t\t// Create material\r\n\r\n\t\tconst scope = this;\r\n\t\tconst mat = this.materialsInfo[ materialName ];\r\n\t\tconst params = {\r\n\r\n\t\t\tname: materialName,\r\n\t\t\tside: this.side\r\n\r\n\t\t};\r\n\r\n\t\tfunction resolveURL( baseUrl, url ) {\r\n\r\n\t\t\tif ( typeof url !== 'string' || url === '' )\r\n\t\t\t\treturn '';\r\n\r\n\t\t\t// Absolute URL\r\n\t\t\tif ( /^https?:\\/\\//i.test( url ) ) return url;\r\n\r\n\t\t\treturn baseUrl + url;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setMapForType( mapType, value ) {\r\n\r\n\t\t\tif ( params[ mapType ] ) return; // Keep the first encountered texture\r\n\r\n\t\t\tconst texParams = scope.getTextureParams( value, params );\r\n\t\t\t// const map = scope.loadTexture( resolveURL( scope.baseUrl, texParams.url ) );\r\n\t\t\tconst map = scope.loadTexture( texParams.url );\r\n\r\n\t\t\tmap.repeat.copy( texParams.scale );\r\n\t\t\tmap.offset.copy( texParams.offset );\r\n\r\n\t\t\tmap.wrapS = scope.wrap;\r\n\t\t\tmap.wrapT = scope.wrap;\r\n\r\n\t\t\tif ( mapType === 'map' || mapType === 'emissiveMap' ) {\r\n\r\n\t\t\t\tmap.encoding = sRGBEncoding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tparams[ mapType ] = map;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const prop in mat ) {\r\n\r\n\t\t\tconst value = mat[ prop ];\r\n\t\t\tlet n;\r\n\r\n\t\t\tif ( value === '' ) continue;\r\n\r\n\t\t\tswitch ( prop.toLowerCase() ) {\r\n\r\n\t\t\t\t// Ns is material specular exponent\r\n\r\n\t\t\t\tcase 'kd':\r\n\r\n\t\t\t\t\t// Diffuse color (color under white light) using RGB values\r\n\r\n\t\t\t\t\tparams.color = new Color().fromArray( value ).convertSRGBToLinear();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ks':\r\n\r\n\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\r\n\t\t\t\t\tparams.specular = new Color().fromArray( value ).convertSRGBToLinear();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ke':\r\n\r\n\t\t\t\t\t// Emissive using RGB values\r\n\t\t\t\t\tparams.emissive = new Color().fromArray( value ).convertSRGBToLinear();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map_kd':\r\n\r\n\t\t\t\t\t// Diffuse texture map\r\n\r\n\t\t\t\t\tsetMapForType( 'map', value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map_ks':\r\n\r\n\t\t\t\t\t// Specular map\r\n\r\n\t\t\t\t\tsetMapForType( 'specularMap', value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map_ke':\r\n\r\n\t\t\t\t\t// Emissive map\r\n\r\n\t\t\t\t\tsetMapForType( 'emissiveMap', value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'norm':\r\n\r\n\t\t\t\t\tsetMapForType( 'normalMap', value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map_bump':\r\n\t\t\t\tcase 'bump':\r\n\r\n\t\t\t\t\t// Bump texture map\r\n\r\n\t\t\t\t\tsetMapForType( 'bumpMap', value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map_d':\r\n\r\n\t\t\t\t\t// Alpha map\r\n\r\n\t\t\t\t\tsetMapForType( 'alphaMap', value );\r\n\t\t\t\t\tparams.transparent = true;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ns':\r\n\r\n\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\r\n\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\r\n\r\n\t\t\t\t\tparams.shininess = parseFloat( value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'd':\r\n\t\t\t\t\tn = parseFloat( value );\r\n\r\n\t\t\t\t\tif ( n < 1 ) {\r\n\r\n\t\t\t\t\t\tparams.opacity = n;\r\n\t\t\t\t\t\tparams.transparent = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tr':\r\n\t\t\t\t\tn = parseFloat( value );\r\n\r\n\t\t\t\t\tif ( this.options && this.options.invertTrProperty ) n = 1 - n;\r\n\r\n\t\t\t\t\tif ( n > 0 ) {\r\n\r\n\t\t\t\t\t\tparams.opacity = 1 - n;\r\n\t\t\t\t\t\tparams.transparent = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.materials[ materialName ] = new MeshPhongMaterial( params );\r\n\t\treturn this.materials[ materialName ];\r\n\r\n\t}\r\n\r\n\tgetTextureParams( value, matParams ) {\r\n\r\n\t\tconst texParams = {\r\n\r\n\t\t\tscale: new Vector2( 1, 1 ),\r\n\t\t\toffset: new Vector2( 0, 0 )\r\n\r\n\t\t };\r\n\r\n\t\tconst items = value.split( /\\s+/ );\r\n\t\tlet pos;\r\n\r\n\t\tpos = items.indexOf( '-bm' );\r\n\r\n\t\tif ( pos >= 0 ) {\r\n\r\n\t\t\tmatParams.bumpScale = parseFloat( items[ pos + 1 ] );\r\n\t\t\titems.splice( pos, 2 );\r\n\r\n\t\t}\r\n\r\n\t\tpos = items.indexOf( '-s' );\r\n\r\n\t\tif ( pos >= 0 ) {\r\n\r\n\t\t\ttexParams.scale.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\r\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\r\n\r\n\t\t}\r\n\r\n\t\tpos = items.indexOf( '-o' );\r\n\r\n\t\tif ( pos >= 0 ) {\r\n\r\n\t\t\ttexParams.offset.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\r\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\r\n\r\n\t\t}\r\n\r\n\t\ttexParams.url = items.join( ' ' ).trim();\r\n\t\treturn texParams;\r\n\r\n\t}\r\n\r\n\tloadTexture( url, mapping, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst texture = new Texture();\r\n\r\n\t\tlet pathName = this.fileMap.get(url)\t\t\r\n\r\n\t\t// 从zip文件中获取图片内容并转换为Image对象\r\n\t\tthis.zip.file(pathName).async(\"blob\").then(blob => {\r\n\t\t  \tconst image = new Image();\r\n\t\t  \timage.src = URL.createObjectURL(blob);\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\t\t\t\tonLoad( texture );\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\r\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { MTLLoader };\r\n","import {\r\n\tBufferGeometry,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tGroup,\r\n\tLineBasicMaterial,\r\n\tLineSegments,\r\n\tLoader,\r\n\tMaterial,\r\n\tMesh,\r\n\tMeshPhongMaterial,\r\n\tPoints,\r\n\tPointsMaterial,\r\n\tVector3,\r\n\tColor\r\n} from 'three';\r\n\r\n// o object_name | g group_name\r\nconst _object_pattern = /^[og]\\s*(.+)?/;\r\n// mtllib file_reference\r\nconst _material_library_pattern = /^mtllib /;\r\n// usemtl material_name\r\nconst _material_use_pattern = /^usemtl /;\r\n// usemap map_name\r\nconst _map_use_pattern = /^usemap /;\r\nconst _face_vertex_data_separator_pattern = /\\s+/;\r\n\r\nconst _vA = new Vector3();\r\nconst _vB = new Vector3();\r\nconst _vC = new Vector3();\r\n\r\nconst _ab = new Vector3();\r\nconst _cb = new Vector3();\r\n\r\nconst _color = new Color();\r\n\r\nfunction ParserState() {\r\n\r\n\tconst state = {\r\n\t\tobjects: [],\r\n\t\tobject: {},\r\n\r\n\t\tvertices: [],\r\n\t\tnormals: [],\r\n\t\tcolors: [],\r\n\t\tuvs: [],\r\n\r\n\t\tmaterials: {},\r\n\t\tmaterialLibraries: [],\r\n\r\n\t\tstartObject: function ( name, fromDeclaration ) {\r\n\r\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\r\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\r\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\r\n\r\n\t\t\t\tthis.object.name = name;\r\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\r\n\r\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\r\n\r\n\t\t\t\tthis.object._finalize( true );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.object = {\r\n\t\t\t\tname: name || '',\r\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\r\n\r\n\t\t\t\tgeometry: {\r\n\t\t\t\t\tvertices: [],\r\n\t\t\t\t\tnormals: [],\r\n\t\t\t\t\tcolors: [],\r\n\t\t\t\t\tuvs: [],\r\n\t\t\t\t\thasUVIndices: false\r\n\t\t\t\t},\r\n\t\t\t\tmaterials: [],\r\n\t\t\t\tsmooth: true,\r\n\r\n\t\t\t\tstartMaterial: function ( name, libraries ) {\r\n\r\n\t\t\t\t\tconst previous = this._finalize( false );\r\n\r\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\r\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\r\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\r\n\r\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst material = {\r\n\t\t\t\t\t\tindex: this.materials.length,\r\n\t\t\t\t\t\tname: name || '',\r\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\r\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\r\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\r\n\t\t\t\t\t\tgroupEnd: - 1,\r\n\t\t\t\t\t\tgroupCount: - 1,\r\n\t\t\t\t\t\tinherited: false,\r\n\r\n\t\t\t\t\t\tclone: function ( index ) {\r\n\r\n\t\t\t\t\t\t\tconst cloned = {\r\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\r\n\t\t\t\t\t\t\t\tname: this.name,\r\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\r\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\r\n\t\t\t\t\t\t\t\tgroupStart: 0,\r\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\r\n\t\t\t\t\t\t\t\tgroupCount: - 1,\r\n\t\t\t\t\t\t\t\tinherited: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\r\n\t\t\t\t\t\t\treturn cloned;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.materials.push( material );\r\n\r\n\t\t\t\t\treturn material;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcurrentMaterial: function () {\r\n\r\n\t\t\t\t\tif ( this.materials.length > 0 ) {\r\n\r\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn undefined;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\t_finalize: function ( end ) {\r\n\r\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\r\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\r\n\r\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\r\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\r\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\r\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\r\n\r\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\r\n\r\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\r\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\r\n\r\n\t\t\t\t\t\tthis.materials.push( {\r\n\t\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\t\tsmooth: this.smooth\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn lastMultiMaterial;\r\n\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Inherit previous objects material.\r\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\r\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\r\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\r\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\r\n\r\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\r\n\r\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\r\n\t\t\t\tdeclared.inherited = true;\r\n\t\t\t\tthis.object.materials.push( declared );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.objects.push( this.object );\r\n\r\n\t\t},\r\n\r\n\t\tfinalize: function () {\r\n\r\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\r\n\r\n\t\t\t\tthis.object._finalize( true );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tparseVertexIndex: function ( value, len ) {\r\n\r\n\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\r\n\r\n\t\t},\r\n\r\n\t\tparseNormalIndex: function ( value, len ) {\r\n\r\n\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\r\n\r\n\t\t},\r\n\r\n\t\tparseUVIndex: function ( value, len ) {\r\n\r\n\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\r\n\r\n\t\t},\r\n\r\n\t\taddVertex: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.vertices;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddVertexPoint: function ( a ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.vertices;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddVertexLine: function ( a ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.vertices;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddNormal: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.normals;\r\n\t\t\tconst dst = this.object.geometry.normals;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddFaceNormal: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.normals;\r\n\r\n\t\t\t_vA.fromArray( src, a );\r\n\t\t\t_vB.fromArray( src, b );\r\n\t\t\t_vC.fromArray( src, c );\r\n\r\n\t\t\t_cb.subVectors( _vC, _vB );\r\n\t\t\t_ab.subVectors( _vA, _vB );\r\n\t\t\t_cb.cross( _ab );\r\n\r\n\t\t\t_cb.normalize();\r\n\r\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\r\n\t\t},\r\n\r\n\t\taddColor: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.colors;\r\n\t\t\tconst dst = this.object.geometry.colors;\r\n\r\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddUV: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.uvs;\r\n\t\t\tconst dst = this.object.geometry.uvs;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\r\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\r\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddDefaultUV: function () {\r\n\r\n\t\t\tconst dst = this.object.geometry.uvs;\r\n\r\n\t\t\tdst.push( 0, 0 );\r\n\t\t\tdst.push( 0, 0 );\r\n\t\t\tdst.push( 0, 0 );\r\n\r\n\t\t},\r\n\r\n\t\taddUVLine: function ( a ) {\r\n\r\n\t\t\tconst src = this.uvs;\r\n\t\t\tconst dst = this.object.geometry.uvs;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\r\n\r\n\t\t\tconst vLen = this.vertices.length;\r\n\r\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\r\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\r\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\r\n\r\n\t\t\tthis.addVertex( ia, ib, ic );\r\n\t\t\tthis.addColor( ia, ib, ic );\r\n\r\n\t\t\t// normals\r\n\r\n\t\t\tif ( na !== undefined && na !== '' ) {\r\n\r\n\t\t\t\tconst nLen = this.normals.length;\r\n\r\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\r\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\r\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\r\n\r\n\t\t\t\tthis.addNormal( ia, ib, ic );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tif ( ua !== undefined && ua !== '' ) {\r\n\r\n\t\t\t\tconst uvLen = this.uvs.length;\r\n\r\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\r\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\r\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\r\n\r\n\t\t\t\tthis.addUV( ia, ib, ic );\r\n\r\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\r\n\r\n\t\t\t\tthis.addDefaultUV();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\taddPointGeometry: function ( vertices ) {\r\n\r\n\t\t\tthis.object.geometry.type = 'Points';\r\n\r\n\t\t\tconst vLen = this.vertices.length;\r\n\r\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\r\n\r\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\r\n\r\n\t\t\t\tthis.addVertexPoint( index );\r\n\t\t\t\tthis.addColor( index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\taddLineGeometry: function ( vertices, uvs ) {\r\n\r\n\t\t\tthis.object.geometry.type = 'Line';\r\n\r\n\t\t\tconst vLen = this.vertices.length;\r\n\t\t\tconst uvLen = this.uvs.length;\r\n\r\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\r\n\r\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\r\n\r\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tstate.startObject( '', false );\r\n\r\n\treturn state;\r\n\r\n}\r\n\r\n//\r\n\r\nclass OBJLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.materials = null;\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t// loader.load( url, function ( text ) {\r\n\t\tlet pathName = this.fileMap.get(url)\r\n\t\tthis.zip.file(pathName).async('uint8array').then(function (text) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tsetMaterials( materials ) {\r\n\r\n\t\tthis.materials = materials;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZip( zip ) {\r\n\t\tthis.zip = zip;\r\n\t\tthis.fileMap = new Map();\r\n\t\tfor (const pathName in zip.files) {\r\n\t\t\tif (Object.prototype.hasOwnProperty.call(zip.files, pathName)) {\t\t\t\t\r\n\t\t\t\tconst fileName = pathName.substring(pathName.lastIndexOf('/') + 1);\r\n\t\t\t\tthis.fileMap.set(fileName, zip.files[pathName].name);\r\n\t\t    }\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\r\n\tparse( text ) {\r\n\r\n\t\tconst state = new ParserState();\r\n\r\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\r\n\r\n\t\t\t// This is faster than String.split with regex that splits on both\r\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\r\n\r\n\t\t\t// join lines separated by a line continuation character (\\)\r\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\r\n\r\n\t\t}\r\n\r\n\t\tconst lines = text.split( '\\n' );\r\n\t\tlet result = [];\r\n\r\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst line = lines[ i ].trimStart();\r\n\r\n\t\t\tif ( line.length === 0 ) continue;\r\n\r\n\t\t\tconst lineFirstChar = line.charAt( 0 );\r\n\r\n\t\t\t// @todo invoke passed in handler if any\r\n\t\t\tif ( lineFirstChar === '#' ) continue;\r\n\r\n\t\t\tif ( lineFirstChar === 'v' ) {\r\n\r\n\t\t\t\tconst data = line.split( _face_vertex_data_separator_pattern );\r\n\r\n\t\t\t\tswitch ( data[ 0 ] ) {\r\n\r\n\t\t\t\t\tcase 'v':\r\n\t\t\t\t\t\tstate.vertices.push(\r\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif ( data.length >= 7 ) {\r\n\r\n\t\t\t\t\t\t\t_color.setRGB(\r\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\r\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\r\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\r\n\t\t\t\t\t\t\t).convertSRGBToLinear();\r\n\r\n\t\t\t\t\t\t\tstate.colors.push( _color.r, _color.g, _color.b );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\r\n\r\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'vn':\r\n\t\t\t\t\t\tstate.normals.push(\r\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'vt':\r\n\t\t\t\t\t\tstate.uvs.push(\r\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( lineFirstChar === 'f' ) {\r\n\r\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\r\n\t\t\t\tconst vertexData = lineData.split( _face_vertex_data_separator_pattern );\r\n\t\t\t\tconst faceVertices = [];\r\n\r\n\t\t\t\t// Parse the face vertex data into an easy to work with format\r\n\r\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tconst vertex = vertexData[ j ];\r\n\r\n\t\t\t\t\tif ( vertex.length > 0 ) {\r\n\r\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\r\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\r\n\r\n\t\t\t\tconst v1 = faceVertices[ 0 ];\r\n\r\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tconst v2 = faceVertices[ j ];\r\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\r\n\r\n\t\t\t\t\tstate.addFace(\r\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\r\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\r\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( lineFirstChar === 'l' ) {\r\n\r\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\r\n\t\t\t\tlet lineVertices = [];\r\n\t\t\t\tconst lineUVs = [];\r\n\r\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\r\n\r\n\t\t\t\t\tlineVertices = lineParts;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\r\n\r\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\r\n\r\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\r\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\r\n\r\n\t\t\t} else if ( lineFirstChar === 'p' ) {\r\n\r\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\r\n\t\t\t\tconst pointData = lineData.split( ' ' );\r\n\r\n\t\t\t\tstate.addPointGeometry( pointData );\r\n\r\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\r\n\r\n\t\t\t\t// o object_name\r\n\t\t\t\t// or\r\n\t\t\t\t// g group_name\r\n\r\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\r\n\t\t\t\t// let name = result[ 0 ].slice( 1 ).trim();\r\n\t\t\t\tconst name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );\r\n\r\n\t\t\t\tstate.startObject( name );\r\n\r\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\r\n\r\n\t\t\t\t// material\r\n\r\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\r\n\r\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\r\n\r\n\t\t\t\t// mtl file\r\n\r\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\r\n\r\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\r\n\r\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\r\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\r\n\r\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\r\n\r\n\t\t\t} else if ( lineFirstChar === 's' ) {\r\n\r\n\t\t\t\tresult = line.split( ' ' );\r\n\r\n\t\t\t\t// smooth shading\r\n\r\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\r\n\t\t\t\t// but does not define a usemtl for each face set.\r\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\r\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\r\n\t\t\t\t// where explicit usemtl defines geometry groups.\r\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\r\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\r\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\r\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\r\n\t\t\t\t\t * than 0.\"\r\n\t\t\t\t\t */\r\n\t\t\t\tif ( result.length > 1 ) {\r\n\r\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\r\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\r\n\t\t\t\t\tstate.object.smooth = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst material = state.object.currentMaterial();\r\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Handle null terminated files without exception\r\n\t\t\t\tif ( line === '\\0' ) continue;\r\n\r\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.finalize();\r\n\r\n\t\tconst container = new Group();\r\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\r\n\r\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\r\n\r\n\t\tif ( hasPrimitives === true ) {\r\n\r\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst object = state.objects[ i ];\r\n\t\t\t\tconst geometry = object.geometry;\r\n\t\t\t\tconst materials = object.materials;\r\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\r\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\r\n\t\t\t\tlet hasVertexColors = false;\r\n\r\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\r\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\r\n\r\n\t\t\t\tconst buffergeometry = new BufferGeometry();\r\n\r\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\r\n\r\n\t\t\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\t\t\thasVertexColors = true;\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\r\n\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create materials\r\n\r\n\t\t\t\tconst createdMaterials = [];\r\n\r\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\r\n\r\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\r\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\r\n\t\t\t\t\tlet material = state.materials[ materialHash ];\r\n\r\n\t\t\t\t\tif ( this.materials !== null ) {\r\n\r\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\r\n\r\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\r\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\r\n\r\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\r\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\r\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\r\n\t\t\t\t\t\t\tmaterial = materialLine;\r\n\r\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\r\n\r\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\r\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\r\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\r\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\r\n\t\t\t\t\t\t\tmaterial = materialPoints;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( material === undefined ) {\r\n\r\n\t\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\r\n\r\n\t\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\r\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\r\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\r\n\r\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcreatedMaterials.push( material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create mesh\r\n\r\n\t\t\t\tlet mesh;\r\n\r\n\t\t\t\tif ( createdMaterials.length > 1 ) {\r\n\r\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\r\n\r\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\r\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmesh.name = object.name;\r\n\r\n\t\t\t\tcontainer.add( mesh );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\r\n\r\n\t\t\tif ( state.vertices.length > 0 ) {\r\n\r\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\r\n\r\n\t\t\t\tconst buffergeometry = new BufferGeometry();\r\n\r\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\r\n\r\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\r\n\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\r\n\t\t\t\t\tmaterial.vertexColors = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst points = new Points( buffergeometry, material );\r\n\t\t\t\tcontainer.add( points );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn container;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { OBJLoader };\r\n","import {\r\n\tEventDispatcher,\r\n\tMOUSE,\r\n\tQuaternion,\r\n\tSpherical,\r\n\tTOUCH,\r\n\tVector2,\r\n\tVector3\r\n} from 'three';\r\n\r\n// OrbitControls performs orbiting, dollying (zooming), and panning.\r\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n//\r\n//    Orbit - left mouse / touch: one-finger move\r\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\r\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\r\n\r\nconst _changeEvent = { type: 'change' };\r\nconst _startEvent = { type: 'start' };\r\nconst _endEvent = { type: 'end' };\r\n\r\nclass OrbitControls extends EventDispatcher {\r\n\r\n\tconstructor( object, domElement ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.domElement = domElement;\r\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\r\n\r\n\t\t// Set to false to disable this control\r\n\t\tthis.enabled = true;\r\n\r\n\t\t// \"target\" sets the location of focus, where the object orbits around\r\n\t\tthis.target = new Vector3();\r\n\r\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\r\n\t\tthis.minDistance = 0;\r\n\t\tthis.maxDistance = Infinity;\r\n\r\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\r\n\t\tthis.minZoom = 0;\r\n\t\tthis.maxZoom = Infinity;\r\n\r\n\t\t// How far you can orbit vertically, upper and lower limits.\r\n\t\t// Range is 0 to Math.PI radians.\r\n\t\tthis.minPolarAngle = 0; // radians\r\n\t\tthis.maxPolarAngle = Math.PI; // radians\r\n\r\n\t\t// How far you can orbit horizontally, upper and lower limits.\r\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\r\n\t\tthis.minAzimuthAngle = - Infinity; // radians\r\n\t\tthis.maxAzimuthAngle = Infinity; // radians\r\n\r\n\t\t// Set to true to enable damping (inertia)\r\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\r\n\t\tthis.enableDamping = false;\r\n\t\tthis.dampingFactor = 0.05;\r\n\r\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n\t\t// Set to false to disable zooming\r\n\t\tthis.enableZoom = true;\r\n\t\tthis.zoomSpeed = 1.0;\r\n\r\n\t\t// Set to false to disable rotating\r\n\t\tthis.enableRotate = true;\r\n\t\tthis.rotateSpeed = 1.0;\r\n\r\n\t\t// Set to false to disable panning\r\n\t\tthis.enablePan = true;\r\n\t\tthis.panSpeed = 1.0;\r\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\r\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\r\n\r\n\t\t// Set to true to automatically rotate around the target\r\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n\t\tthis.autoRotate = false;\r\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\r\n\r\n\t\t// The four arrow keys\r\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\r\n\r\n\t\t// Mouse buttons\r\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\r\n\r\n\t\t// Touch fingers\r\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\r\n\r\n\t\t// for reset\r\n\t\tthis.target0 = this.target.clone();\r\n\t\tthis.position0 = this.object.position.clone();\r\n\t\tthis.zoom0 = this.object.zoom;\r\n\r\n\t\t// the target DOM element for key events\r\n\t\tthis._domElementKeyEvents = null;\r\n\r\n\t\t//\r\n\t\t// public methods\r\n\t\t//\r\n\r\n\t\tthis.getPolarAngle = function () {\r\n\r\n\t\t\treturn spherical.phi;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getAzimuthalAngle = function () {\r\n\r\n\t\t\treturn spherical.theta;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDistance = function () {\r\n\r\n\t\t\treturn this.object.position.distanceTo( this.target );\r\n\r\n\t\t};\r\n\r\n\t\tthis.listenToKeyEvents = function ( domElement ) {\r\n\r\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\r\n\t\t\tthis._domElementKeyEvents = domElement;\r\n\r\n\t\t};\r\n\r\n\t\tthis.stopListenToKeyEvents = function () {\r\n\r\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\r\n\t\t\tthis._domElementKeyEvents = null;\r\n\r\n\t\t};\r\n\r\n\t\tthis.saveState = function () {\r\n\r\n\t\t\tscope.target0.copy( scope.target );\r\n\t\t\tscope.position0.copy( scope.object.position );\r\n\t\t\tscope.zoom0 = scope.object.zoom;\r\n\r\n\t\t};\r\n\r\n\t\tthis.reset = function () {\r\n\r\n\t\t\tscope.target.copy( scope.target0 );\r\n\t\t\tscope.object.position.copy( scope.position0 );\r\n\t\t\tscope.object.zoom = scope.zoom0;\r\n\r\n\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\tscope.dispatchEvent( _changeEvent );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t\tstate = STATE.NONE;\r\n\r\n\t\t};\r\n\r\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\r\n\t\tthis.update = function () {\r\n\r\n\t\t\tconst offset = new Vector3();\r\n\r\n\t\t\t// so camera.up is the orbit axis\r\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\r\n\t\t\tconst quatInverse = quat.clone().invert();\r\n\r\n\t\t\tconst lastPosition = new Vector3();\r\n\t\t\tconst lastQuaternion = new Quaternion();\r\n\r\n\t\t\tconst twoPI = 2 * Math.PI;\r\n\r\n\t\t\treturn function update() {\r\n\r\n\t\t\t\tconst position = scope.object.position;\r\n\r\n\t\t\t\toffset.copy( position ).sub( scope.target );\r\n\r\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\r\n\t\t\t\toffset.applyQuaternion( quat );\r\n\r\n\t\t\t\t// angle from z-axis around y-axis\r\n\t\t\t\tspherical.setFromVector3( offset );\r\n\r\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\r\n\r\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( scope.enableDamping ) {\r\n\r\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\r\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\r\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// restrict theta to be between desired limits\r\n\r\n\t\t\t\tlet min = scope.minAzimuthAngle;\r\n\t\t\t\tlet max = scope.maxAzimuthAngle;\r\n\r\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\r\n\r\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\r\n\r\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\r\n\r\n\t\t\t\t\tif ( min <= max ) {\r\n\r\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\r\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\r\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// restrict phi to be between desired limits\r\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\r\n\r\n\t\t\t\tspherical.makeSafe();\r\n\r\n\r\n\t\t\t\tspherical.radius *= scale;\r\n\r\n\t\t\t\t// restrict radius to be between desired limits\r\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\r\n\r\n\t\t\t\t// move target to panned location\r\n\r\n\t\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tscope.target.add( panOffset );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\toffset.setFromSpherical( spherical );\r\n\r\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\r\n\t\t\t\toffset.applyQuaternion( quatInverse );\r\n\r\n\t\t\t\tposition.copy( scope.target ).add( offset );\r\n\r\n\t\t\t\tscope.object.lookAt( scope.target );\r\n\r\n\t\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\r\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\r\n\r\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscale = 1;\r\n\r\n\t\t\t\t// update condition is:\r\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\r\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n\t\t\t\tif ( zoomChanged ||\r\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\r\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\r\n\r\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\r\n\r\n\t\t\t\t\tlastPosition.copy( scope.object.position );\r\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\r\n\t\t\t\t\tzoomChanged = false;\r\n\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\r\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\r\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\r\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\r\n\r\n\r\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\r\n\r\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\r\n\t\t\t\tscope._domElementKeyEvents = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\t\t// internals\r\n\t\t//\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst STATE = {\r\n\t\t\tNONE: - 1,\r\n\t\t\tROTATE: 0,\r\n\t\t\tDOLLY: 1,\r\n\t\t\tPAN: 2,\r\n\t\t\tTOUCH_ROTATE: 3,\r\n\t\t\tTOUCH_PAN: 4,\r\n\t\t\tTOUCH_DOLLY_PAN: 5,\r\n\t\t\tTOUCH_DOLLY_ROTATE: 6\r\n\t\t};\r\n\r\n\t\tlet state = STATE.NONE;\r\n\r\n\t\tconst EPS = 0.000001;\r\n\r\n\t\t// current position in spherical coordinates\r\n\t\tconst spherical = new Spherical();\r\n\t\tconst sphericalDelta = new Spherical();\r\n\r\n\t\tlet scale = 1;\r\n\t\tconst panOffset = new Vector3();\r\n\t\tlet zoomChanged = false;\r\n\r\n\t\tconst rotateStart = new Vector2();\r\n\t\tconst rotateEnd = new Vector2();\r\n\t\tconst rotateDelta = new Vector2();\r\n\r\n\t\tconst panStart = new Vector2();\r\n\t\tconst panEnd = new Vector2();\r\n\t\tconst panDelta = new Vector2();\r\n\r\n\t\tconst dollyStart = new Vector2();\r\n\t\tconst dollyEnd = new Vector2();\r\n\t\tconst dollyDelta = new Vector2();\r\n\r\n\t\tconst pointers = [];\r\n\t\tconst pointerPositions = {};\r\n\r\n\t\tfunction getAutoRotationAngle() {\r\n\r\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getZoomScale() {\r\n\r\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\r\n\r\n\t\t}\r\n\r\n\t\tfunction rotateLeft( angle ) {\r\n\r\n\t\t\tsphericalDelta.theta -= angle;\r\n\r\n\t\t}\r\n\r\n\t\tfunction rotateUp( angle ) {\r\n\r\n\t\t\tsphericalDelta.phi -= angle;\r\n\r\n\t\t}\r\n\r\n\t\tconst panLeft = function () {\r\n\r\n\t\t\tconst v = new Vector3();\r\n\r\n\t\t\treturn function panLeft( distance, objectMatrix ) {\r\n\r\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\r\n\t\t\t\tv.multiplyScalar( - distance );\r\n\r\n\t\t\t\tpanOffset.add( v );\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tconst panUp = function () {\r\n\r\n\t\t\tconst v = new Vector3();\r\n\r\n\t\t\treturn function panUp( distance, objectMatrix ) {\r\n\r\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\r\n\r\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\r\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tv.multiplyScalar( distance );\r\n\r\n\t\t\t\tpanOffset.add( v );\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\t// deltaX and deltaY are in pixels; right and down are positive\r\n\t\tconst pan = function () {\r\n\r\n\t\t\tconst offset = new Vector3();\r\n\r\n\t\t\treturn function pan( deltaX, deltaY ) {\r\n\r\n\t\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\t\t// perspective\r\n\t\t\t\t\tconst position = scope.object.position;\r\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\r\n\t\t\t\t\tlet targetDistance = offset.length();\r\n\r\n\t\t\t\t\t// half of the fov is center to top of screen\r\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\r\n\r\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\r\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\r\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t\t// orthographic\r\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\r\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// camera neither orthographic nor perspective\r\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\r\n\t\t\t\t\tscope.enablePan = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tfunction dollyOut( dollyScale ) {\r\n\r\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\tscale /= dollyScale;\r\n\r\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\r\n\t\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\t\tzoomChanged = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\t\tscope.enableZoom = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction dollyIn( dollyScale ) {\r\n\r\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\tscale *= dollyScale;\r\n\r\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\r\n\t\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\t\tzoomChanged = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\t\tscope.enableZoom = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// event callbacks - update the object state\r\n\t\t//\r\n\r\n\t\tfunction handleMouseDownRotate( event ) {\r\n\r\n\t\t\trotateStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseDownDolly( event ) {\r\n\r\n\t\t\tdollyStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseDownPan( event ) {\r\n\r\n\t\t\tpanStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMoveRotate( event ) {\r\n\r\n\t\t\trotateEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\t\trotateStart.copy( rotateEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMoveDolly( event ) {\r\n\r\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\r\n\r\n\t\t\tif ( dollyDelta.y > 0 ) {\r\n\r\n\t\t\t\tdollyOut( getZoomScale() );\r\n\r\n\t\t\t} else if ( dollyDelta.y < 0 ) {\r\n\r\n\t\t\t\tdollyIn( getZoomScale() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMovePan( event ) {\r\n\r\n\t\t\tpanEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\t\tpanStart.copy( panEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseWheel( event ) {\r\n\r\n\t\t\tif ( event.deltaY < 0 ) {\r\n\r\n\t\t\t\tdollyIn( getZoomScale() );\r\n\r\n\t\t\t} else if ( event.deltaY > 0 ) {\r\n\r\n\t\t\t\tdollyOut( getZoomScale() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleKeyDown( event ) {\r\n\r\n\t\t\tlet needsUpdate = false;\r\n\r\n\t\t\tswitch ( event.code ) {\r\n\r\n\t\t\t\tcase scope.keys.UP:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.BOTTOM:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.LEFT:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.RIGHT:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t\t// prevent the browser from scrolling on cursor keys\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartRotate() {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\r\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\r\n\r\n\t\t\t\trotateStart.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartPan() {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\r\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\r\n\r\n\t\t\t\tpanStart.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDolly() {\r\n\r\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\r\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\r\n\r\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\t\tdollyStart.set( 0, distance );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDollyPan() {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\r\n\r\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDollyRotate() {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\r\n\r\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveRotate( event ) {\r\n\r\n\t\t\tif ( pointers.length == 1 ) {\r\n\r\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\r\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\r\n\r\n\t\t\t\trotateEnd.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\t\trotateStart.copy( rotateEnd );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMovePan( event ) {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\r\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\r\n\r\n\t\t\t\tpanEnd.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\t\tpanStart.copy( panEnd );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDolly( event ) {\r\n\r\n\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\tconst dx = event.pageX - position.x;\r\n\t\t\tconst dy = event.pageY - position.y;\r\n\r\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\t\tdollyEnd.set( 0, distance );\r\n\r\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\r\n\r\n\t\t\tdollyOut( dollyDelta.y );\r\n\r\n\t\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDollyPan( event ) {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDollyRotate( event ) {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// event handlers - FSM: listen for events and reset state\r\n\t\t//\r\n\r\n\t\tfunction onPointerDown( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tif ( pointers.length === 0 ) {\r\n\r\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\r\n\r\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\r\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\taddPointer( event );\r\n\r\n\t\t\tif ( event.pointerType === 'touch' ) {\r\n\r\n\t\t\t\tonTouchStart( event );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tonMouseDown( event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onPointerMove( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tif ( event.pointerType === 'touch' ) {\r\n\r\n\t\t\t\tonTouchMove( event );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tonMouseMove( event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onPointerUp( event ) {\r\n\r\n\t\t\tremovePointer( event );\r\n\r\n\t\t\tif ( pointers.length === 0 ) {\r\n\r\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\r\n\r\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\r\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.dispatchEvent( _endEvent );\r\n\r\n\t\t\tstate = STATE.NONE;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseDown( event ) {\r\n\r\n\t\t\tlet mouseAction;\r\n\r\n\t\t\tswitch ( event.button ) {\r\n\r\n\t\t\t\tcase 0:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tmouseAction = - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( mouseAction ) {\r\n\r\n\t\t\t\tcase MOUSE.DOLLY:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownDolly( event );\r\n\r\n\t\t\t\t\tstate = STATE.DOLLY;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MOUSE.ROTATE:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MOUSE.PAN:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseMove( event ) {\r\n\r\n\t\t\tswitch ( state ) {\r\n\r\n\t\t\t\tcase STATE.ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMoveRotate( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.DOLLY:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMoveDolly( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.PAN:\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMovePan( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseWheel( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\thandleMouseWheel( event );\r\n\r\n\t\t\tscope.dispatchEvent( _endEvent );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onKeyDown( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\r\n\r\n\t\t\thandleKeyDown( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onTouchStart( event ) {\r\n\r\n\t\t\ttrackPointer( event );\r\n\r\n\t\t\tswitch ( pointers.length ) {\r\n\r\n\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\r\n\r\n\t\t\t\t\t\tcase TOUCH.ROTATE:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartRotate();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TOUCH.PAN:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartPan();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\r\n\r\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onTouchMove( event ) {\r\n\r\n\t\t\ttrackPointer( event );\r\n\r\n\t\t\tswitch ( state ) {\r\n\r\n\t\t\t\tcase STATE.TOUCH_ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveRotate( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_PAN:\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMovePan( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveDollyPan( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onContextMenu( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t}\r\n\r\n\t\tfunction addPointer( event ) {\r\n\r\n\t\t\tpointers.push( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction removePointer( event ) {\r\n\r\n\t\t\tdelete pointerPositions[ event.pointerId ];\r\n\r\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\r\n\r\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\r\n\r\n\t\t\t\t\tpointers.splice( i, 1 );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction trackPointer( event ) {\r\n\r\n\t\t\tlet position = pointerPositions[ event.pointerId ];\r\n\r\n\t\t\tif ( position === undefined ) {\r\n\r\n\t\t\t\tposition = new Vector2();\r\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.set( event.pageX, event.pageY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getSecondPointerPosition( event ) {\r\n\r\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\r\n\r\n\t\t\treturn pointerPositions[ pointer.pointerId ];\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\r\n\r\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\r\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\r\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\r\n\r\n\t\t// force an update at start\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { OrbitControls };\r\n","import {\r\n\tBufferAttribute,\r\n\tBufferGeometry,\r\n\tColor,\r\n\tFileLoader,\r\n\tLoader,\r\n\tLinearSRGBColorSpace,\r\n\tSRGBColorSpace\r\n} from 'three';\r\n\r\nconst _taskCache = new WeakMap();\r\n\r\nclass UGBLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.decoderPath = '';\r\n\t\tthis.decoderConfig = {};\r\n\t\tthis.decoderBinary = null;\r\n\t\tthis.decoderPending = null;\r\n\r\n\t\tthis.workerLimit = 4;\r\n\t\tthis.workerPool = [];\r\n\t\tthis.workerNextTaskID = 1;\r\n\t\tthis.workerSourceURL = '';\r\n\r\n\t\tthis.defaultAttributeIDs = {\r\n\t\t\tposition: 'POSITION',\r\n\t\t\tnormal: 'NORMAL',\r\n\t\t\tcolor: 'COLOR',\r\n\t\t\tuv: 'TEX_COORD'\r\n\t\t};\r\n\t\tthis.defaultAttributeTypes = {\r\n\t\t\tposition: 'Float32Array',\r\n\t\t\tnormal: 'Float32Array',\r\n\t\t\tcolor: 'Float32Array',\r\n\t\t\tuv: 'Float32Array'\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tsetDecoderPath( path ) {\r\n\r\n\t\tthis.decoderPath = path;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetDecoderConfig( config ) {\r\n\r\n\t\tthis.decoderConfig = config;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetWorkerLimit( workerLimit ) {\r\n\r\n\t\tthis.workerLimit = workerLimit;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZip( zip ) {\r\n\t\tthis.zip = zip;\r\n\t\tthis.fileMap = new Map();\r\n\t\tfor (const pathName in zip.files) {\r\n\t\t\tif (Object.prototype.hasOwnProperty.call(zip.files, pathName)) {\t\t\t\t\r\n\t\t\t\tconst fileName = pathName.substring(pathName.lastIndexOf('/') + 1);\r\n\t\t\t\tthis.fileMap.set(fileName, zip.files[pathName].name);\r\n\t\t    }\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar _this = this;\r\n\r\n\t\tlet pathName = this.fileMap.get(url)\r\n\t\t_this.zip.file(pathName).async('arraybuffer').then(function (buffer) {\r\n\t\t\tconsole.log(pathName)\r\n\t\t\tconsole.log(\"This: \", _this)\r\n\r\n\t\t\t_this.parse( buffer, onLoad, onError );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( buffer, onLoad, onError ) {\r\n\r\n\t\tthis.decodeDracoFile( buffer, onLoad, null, null, SRGBColorSpace ).catch( onError );\r\n\r\n\t}\r\n\r\n\tdecodeDracoFile( buffer, callback, attributeIDs, attributeTypes, vertexColorSpace = LinearSRGBColorSpace ) {\r\n\r\n\t\tconst taskConfig = {\r\n\t\t\tattributeIDs: attributeIDs || this.defaultAttributeIDs,\r\n\t\t\tattributeTypes: attributeTypes || this.defaultAttributeTypes,\r\n\t\t\tuseUniqueIDs: !! attributeIDs,\r\n\t\t\tvertexColorSpace: vertexColorSpace,\r\n\t\t};\r\n\r\n\t\treturn this.decodeGeometry( buffer, taskConfig ).then( callback );\r\n\r\n\t}\r\n\r\n\tdecodeGeometry( buffer, taskConfig ) {\r\n\r\n\t\tconst taskKey = JSON.stringify( taskConfig );\r\n\r\n\t\t// Check for an existing task using this buffer. A transferred buffer cannot be transferred\r\n\t\t// again from this thread.\r\n\t\tif ( _taskCache.has( buffer ) ) {\r\n\r\n\t\t\tconst cachedTask = _taskCache.get( buffer );\r\n\r\n\t\t\tif ( cachedTask.key === taskKey ) {\r\n\r\n\t\t\t\treturn cachedTask.promise;\r\n\r\n\t\t\t} else if ( buffer.byteLength === 0 ) {\r\n\r\n\t\t\t\t// Technically, it would be possible to wait for the previous task to complete,\r\n\t\t\t\t// transfer the buffer back, and decode again with the second configuration. That\r\n\t\t\t\t// is complex, and I don't know of any reason to decode a Draco buffer twice in\r\n\t\t\t\t// different ways, so this is left unimplemented.\r\n\t\t\t\tthrow new Error(\r\n\r\n\t\t\t\t\t'THREE.DRACOLoader: Unable to re-decode a buffer with different ' +\r\n\t\t\t\t\t'settings. Buffer has already been transferred.'\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tlet worker;\r\n\t\tconst taskID = this.workerNextTaskID ++;\r\n\t\tconst taskCost = buffer.byteLength;\r\n\r\n\t\t// Obtain a worker and assign a task, and construct a geometry instance\r\n\t\t// when the task completes.\r\n\t\tconst geometryPending = this._getWorker( taskID, taskCost )\r\n\t\t\t.then( ( _worker ) => {\r\n\r\n\t\t\t\tworker = _worker;\r\n\r\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\r\n\r\n\t\t\t\t\tworker.postMessage( { type: 'decode', id: taskID, taskConfig, buffer }, [ buffer ] );\r\n\r\n\t\t\t\t\t// this.debug();\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} )\r\n\t\t\t.then( ( message ) => this._createGeometry( message.geometry ) );\r\n\r\n\t\t// Remove task from the task list.\r\n\t\t// Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\r\n\t\tgeometryPending\r\n\t\t\t.catch( () => true )\r\n\t\t\t.then( () => {\r\n\r\n\t\t\t\tif ( worker && taskID ) {\r\n\r\n\t\t\t\t\tthis._releaseTask( worker, taskID );\r\n\r\n\t\t\t\t\t// this.debug();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t// Cache the task result.\r\n\t\t_taskCache.set( buffer, {\r\n\r\n\t\t\tkey: taskKey,\r\n\t\t\tpromise: geometryPending\r\n\r\n\t\t} );\r\n\r\n\t\treturn geometryPending;\r\n\r\n\t}\r\n\r\n\t_createGeometry( geometryData ) {\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\r\n\t\tif ( geometryData.index ) {\r\n\r\n\t\t\tgeometry.setIndex( new BufferAttribute( geometryData.index.array, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < geometryData.attributes.length; i ++ ) {\r\n\r\n\t\t\tconst result = geometryData.attributes[ i ];\r\n\t\t\tconst name = result.name;\r\n\t\t\tconst array = result.array;\r\n\t\t\tconst itemSize = result.itemSize;\r\n\r\n\t\t\tconst attribute = new BufferAttribute( array, itemSize );\r\n\r\n\t\t\tif ( name === 'color' ) {\r\n\r\n\t\t\t\tthis._assignVertexColorSpace( attribute, result.vertexColorSpace );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute( name, attribute );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\t_assignVertexColorSpace( attribute, inputColorSpace ) {\r\n\r\n\t\t// While .drc files do not specify colorspace, the only 'official' tooling\r\n\t\t// is PLY and OBJ converters, which use sRGB. We'll assume sRGB when a .drc\r\n\t\t// file is passed into .load() or .parse(). GLTFLoader uses internal APIs\r\n\t\t// to decode geometry, and vertex colors are already Linear-sRGB in there.\r\n\r\n\t\tif ( inputColorSpace !== SRGBColorSpace ) return;\r\n\r\n\t\tconst _color = new Color();\r\n\r\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\r\n\r\n\t\t\t_color.fromBufferAttribute( attribute, i ).convertSRGBToLinear();\r\n\t\t\tattribute.setXYZ( i, _color.r, _color.g, _color.b );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_loadLibrary( url, responseType ) {\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.decoderPath );\r\n\t\tloader.setResponseType( responseType );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\r\n\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\tloader.load( url, resolve, undefined, reject );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpreload() {\r\n\r\n\t\tthis._initDecoder();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t_initDecoder() {\r\n\r\n\t\tif ( this.decoderPending ) return this.decoderPending;\r\n\r\n\t\tconst useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\r\n\t\tconst librariesPending = [];\r\n\r\n\t\tif ( useJS ) {\r\n\r\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.js', 'text' ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_wasm_wrapper.js', 'text' ) );\r\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.wasm', 'arraybuffer' ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.decoderPending = Promise.all( librariesPending )\r\n\t\t\t.then( ( libraries ) => {\r\n\r\n\t\t\t\tconst jsContent = libraries[ 0 ];\r\n\r\n\t\t\t\tif ( ! useJS ) {\r\n\r\n\t\t\t\t\tthis.decoderConfig.wasmBinary = libraries[ 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst fn = DRACOWorker.toString();\r\n\r\n\t\t\t\tconst body = [\r\n\t\t\t\t\t'/* draco decoder */',\r\n\t\t\t\t\tjsContent,\r\n\t\t\t\t\t'',\r\n\t\t\t\t\t'/* worker */',\r\n\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\r\n\r\n\t\t\t} );\r\n\r\n\t\treturn this.decoderPending;\r\n\r\n\t}\r\n\r\n\t_getWorker( taskID, taskCost ) {\r\n\r\n\t\treturn this._initDecoder().then( () => {\r\n\r\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\r\n\r\n\t\t\t\tconst worker = new Worker( this.workerSourceURL );\r\n\r\n\t\t\t\tworker._callbacks = {};\r\n\t\t\t\tworker._taskCosts = {};\r\n\t\t\t\tworker._taskLoad = 0;\r\n\r\n\t\t\t\tworker.postMessage( { type: 'init', decoderConfig: this.decoderConfig } );\r\n\r\n\t\t\t\tworker.onmessage = function ( e ) {\r\n\r\n\t\t\t\t\tconst message = e.data;\r\n\r\n\t\t\t\t\tswitch ( message.type ) {\r\n\r\n\t\t\t\t\t\tcase 'decode':\r\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'error':\r\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.workerPool.push( worker );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\r\n\r\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst worker = this.workerPool[ this.workerPool.length - 1 ];\r\n\t\t\tworker._taskCosts[ taskID ] = taskCost;\r\n\t\t\tworker._taskLoad += taskCost;\r\n\t\t\treturn worker;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t_releaseTask( worker, taskID ) {\r\n\r\n\t\tworker._taskLoad -= worker._taskCosts[ taskID ];\r\n\t\tdelete worker._callbacks[ taskID ];\r\n\t\tdelete worker._taskCosts[ taskID ];\r\n\r\n\t}\r\n\r\n\tdebug() {\r\n\r\n\t\tconsole.log( 'Task load: ', this.workerPool.map( ( worker ) => worker._taskLoad ) );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tfor ( let i = 0; i < this.workerPool.length; ++ i ) {\r\n\r\n\t\t\tthis.workerPool[ i ].terminate();\r\n\r\n\t\t}\r\n\r\n\t\tthis.workerPool.length = 0;\r\n\r\n\t\tif ( this.workerSourceURL !== '' ) {\r\n\r\n\t\t\tURL.revokeObjectURL( this.workerSourceURL );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/* WEB WORKER */\r\n\r\nfunction DRACOWorker() {\r\n\r\n\tlet decoderConfig;\r\n\tlet decoderPending;\r\n\r\n\tonmessage = function ( e ) {\r\n\r\n\t\tconst message = e.data;\r\n\r\n\t\tswitch ( message.type ) {\r\n\r\n\t\t\tcase 'init':\r\n\t\t\t\tdecoderConfig = message.decoderConfig;\r\n\t\t\t\tdecoderPending = new Promise( function ( resolve/*, reject*/ ) {\r\n\r\n\t\t\t\t\tdecoderConfig.onModuleLoaded = function ( draco ) {\r\n\r\n\t\t\t\t\t\t// Module is Promise-like. Wrap before resolving to avoid loop.\r\n\t\t\t\t\t\tresolve( { draco: draco } );\r\n\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tDracoDecoderModule( decoderConfig ); // eslint-disable-line no-undef\r\n\r\n\t\t\t\t} );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'decode':\r\n\t\t\t\tconst buffer = message.buffer;\r\n\t\t\t\tconst taskConfig = message.taskConfig;\r\n\t\t\t\tdecoderPending.then( ( module ) => {\r\n\r\n\t\t\t\t\tconst draco = module.draco;\r\n\t\t\t\t\tconst decoder = new draco.Decoder();\r\n\r\n\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\tconst geometry = decodeGeometry( draco, decoder, new Int8Array( buffer ), taskConfig );\r\n\r\n\t\t\t\t\t\tconst buffers = geometry.attributes.map( ( attr ) => attr.array.buffer );\r\n\r\n\t\t\t\t\t\tif ( geometry.index ) buffers.push( geometry.index.array.buffer );\r\n\r\n\t\t\t\t\t\tself.postMessage( { type: 'decode', id: message.id, geometry }, buffers );\r\n\r\n\t\t\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\t\t\tconsole.error( error );\r\n\r\n\t\t\t\t\t\tself.postMessage( { type: 'error', id: message.id, error: error.message } );\r\n\r\n\t\t\t\t\t} finally {\r\n\r\n\t\t\t\t\t\tdraco.destroy( decoder );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction decodeGeometry( draco, decoder, array, taskConfig ) {\r\n\r\n\t\tconst attributeIDs = taskConfig.attributeIDs;\r\n\t\tconst attributeTypes = taskConfig.attributeTypes;\r\n\r\n\t\tlet dracoGeometry;\r\n\t\tlet decodingStatus;\r\n\r\n\t\tconst geometryType = decoder.GetEncodedGeometryType( array );\r\n\r\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\r\n\r\n\t\t\tdracoGeometry = new draco.Mesh();\r\n\t\t\tdecodingStatus = decoder.DecodeArrayToMesh( array, array.byteLength, dracoGeometry );\r\n\r\n\t\t} else if ( geometryType === draco.POINT_CLOUD ) {\r\n\r\n\t\t\tdracoGeometry = new draco.PointCloud();\r\n\t\t\tdecodingStatus = decoder.DecodeArrayToPointCloud( array, array.byteLength, dracoGeometry );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Unexpected geometry type.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! decodingStatus.ok() || dracoGeometry.ptr === 0 ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg() );\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry = { index: null, attributes: [] };\r\n\r\n\t\t// Gather all vertex attributes.\r\n\t\tfor ( const attributeName in attributeIDs ) {\r\n\r\n\t\t\tconst attributeType = self[ attributeTypes[ attributeName ] ];\r\n\r\n\t\t\tlet attribute;\r\n\t\t\tlet attributeID;\r\n\r\n\t\t\t// A Draco file may be created with default vertex attributes, whose attribute IDs\r\n\t\t\t// are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\r\n\t\t\t// a Draco file may contain a custom set of attributes, identified by known unique\r\n\t\t\t// IDs. glTF files always do the latter, and `.drc` files typically do the former.\r\n\t\t\tif ( taskConfig.useUniqueIDs ) {\r\n\r\n\t\t\t\tattributeID = attributeIDs[ attributeName ];\r\n\t\t\t\tattribute = decoder.GetAttributeByUniqueId( dracoGeometry, attributeID );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tattributeID = decoder.GetAttributeId( dracoGeometry, draco[ attributeIDs[ attributeName ] ] );\r\n\r\n\t\t\t\tif ( attributeID === - 1 ) continue;\r\n\r\n\t\t\t\tattribute = decoder.GetAttribute( dracoGeometry, attributeID );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst attributeResult = decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute );\r\n\r\n\t\t\tif ( attributeName === 'color' ) {\r\n\r\n\t\t\t\tattributeResult.vertexColorSpace = taskConfig.vertexColorSpace;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.attributes.push( attributeResult );\r\n\r\n\t\t}\r\n\r\n\t\t// Add index.\r\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\r\n\r\n\t\t\tgeometry.index = decodeIndex( draco, decoder, dracoGeometry );\r\n\r\n\t\t}\r\n\r\n\t\tdraco.destroy( dracoGeometry );\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction decodeIndex( draco, decoder, dracoGeometry ) {\r\n\r\n\t\tconst numFaces = dracoGeometry.num_faces();\r\n\t\tconst numIndices = numFaces * 3;\r\n\t\tconst byteLength = numIndices * 4;\r\n\r\n\t\tconst ptr = draco._malloc( byteLength );\r\n\t\tdecoder.GetTrianglesUInt32Array( dracoGeometry, byteLength, ptr );\r\n\t\tconst index = new Uint32Array( draco.HEAPF32.buffer, ptr, numIndices ).slice();\r\n\t\tdraco._free( ptr );\r\n\r\n\t\treturn { array: index, itemSize: 1 };\r\n\r\n\t}\r\n\r\n\tfunction decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) {\r\n\r\n\t\tconst numComponents = attribute.num_components();\r\n\t\tconst numPoints = dracoGeometry.num_points();\r\n\t\tconst numValues = numPoints * numComponents;\r\n\t\tconst byteLength = numValues * attributeType.BYTES_PER_ELEMENT;\r\n\t\tconst dataType = getDracoDataType( draco, attributeType );\r\n\r\n\t\tconst ptr = draco._malloc( byteLength );\r\n\t\tdecoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, dataType, byteLength, ptr );\r\n\t\tconst array = new attributeType( draco.HEAPF32.buffer, ptr, numValues ).slice();\r\n\t\tdraco._free( ptr );\r\n\r\n\t\treturn {\r\n\t\t\tname: attributeName,\r\n\t\t\tarray: array,\r\n\t\t\titemSize: numComponents\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction getDracoDataType( draco, attributeType ) {\r\n\r\n\t\tswitch ( attributeType ) {\r\n\r\n\t\t\tcase Float32Array: return draco.DT_FLOAT32;\r\n\t\t\tcase Int8Array: return draco.DT_INT8;\r\n\t\t\tcase Int16Array: return draco.DT_INT16;\r\n\t\t\tcase Int32Array: return draco.DT_INT32;\r\n\t\t\tcase Uint8Array: return draco.DT_UINT8;\r\n\t\t\tcase Uint16Array: return draco.DT_UINT16;\r\n\t\t\tcase Uint32Array: return draco.DT_UINT32;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { UGBLoader };\r\n","import * as THREE from 'three';\r\nimport { MTLLoader } from './MTLLoader.js';\r\nimport { UGBLoader } from './UGBLoader.js';\r\n\r\nclass UGCloud {\r\n\r\n\t#token_dev = 'a1811cf9d60cd523954f5ec40bcb1004d8322d4e75b8cfd09a9fd2dd9904d88e';\r\n\t#token_prod= '6d15b55292b430789704bb164179efd98fb146c5d123f3ad0285f47364fc0657';\r\n\t\r\n\t#container = null;\r\n\t#publicDatabase = null;\r\n\r\n\t#scene = null\r\n\r\n\tconstructor(scene) {\r\n\t\tthis.#scene = scene;\r\n\t}\r\n\r\n\tinitConfig(dev) {\r\n\r\n\t\tvar environment;\r\n\t\tvar token;\r\n\r\n\t\tif (dev) {\r\n\t\t\tenvironment = CloudKit.DEVELOPMENT_ENVIRONMENT;\r\n\t\t\ttoken = this.#token_dev;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tenvironment = CloudKit.PRODUCTION_ENVIRONMENT;\r\n\t\t\ttoken = this.#token_prod;\r\n\t\t}\r\n\r\n\t\tCloudKit.configure({\r\n\t\t\tcontainers: [{\r\n\t\t\t\tcontainerIdentifier: 'iCloud.com.ugscan',\r\n\t\t\t\tapiTokenAuth: {\r\n\t\t\t\t\tapiToken: token\r\n\t\t\t\t},\r\n\t\t\t\tenvironment: environment\r\n\t\t\t}]\r\n\t\t});\r\n\r\n\t\tthis.#container = CloudKit.getDefaultContainer();\r\n\t\tthis.#publicDatabase = this.#container.publicCloudDatabase;\t\r\n\t}\r\n\r\n\tdownloadZipFromURL(modelURL) {\r\n\r\n\t\tlet _this = this;\r\n\t\tconst zip = new JSZip();\r\n\r\n\t\tfetch(modelURL).then((response) => {\r\n\t\t\tconst contentLength = response.headers.get('content-length');\r\n\t\t\tlet loaded = 0;\r\n\r\n\t\t\tconst reader = response.body.getReader();\r\n\t\t\tconst chunks = [];\r\n\r\n\t\t\tfunction read() {\r\n\t\t\t\treader.read().then(({ done, value }) => {\r\n\r\n\t\t\t\t\tif (done) {\r\n\t\t\t\t\t\tconst blob = new Blob(chunks);\r\n\t\t\t\t\t\tconst fileReader = new FileReader();\r\n\r\n\t\t\t\t\t\tfileReader.onload = function () {\r\n\t\t\t\t\t\t\tconst zip = new JSZip();\r\n\t\t\t\t\t\t\tzip.loadAsync(fileReader.result).then((zip) => {\r\n\t\t\t\t\t\t\t\t_this.loadUGB(zip, _this.zoomTo, _this.#scene);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tfileReader.readAsArrayBuffer(blob);\r\n\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tchunks.push(value);\r\n\t\t\t\t\tloaded += value.byteLength;\r\n\t\t\t\t\t_this.onProgress(loaded, contentLength);\r\n\r\n\t\t\t\t\tread();\r\n\t\t\t\t}).catch((error) => {\r\n\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tread();\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n\t}\r\n\r\n\tloadOBJ(zip) {\r\n\r\n\t\tconst onProgress = function (xhr) {\r\n\r\n\t\t\tif (xhr.lengthComputable) {\r\n\r\n\t\t\t\tconst percentComplete = xhr.loaded / xhr.total * 100;\r\n\t\t\t\tconsole.log(Math.round(percentComplete, 2) + '% downloaded');\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tnew MTLLoader()\r\n\t\t\t.setZip(zip)\r\n\t\t\t.load('TexturedMeshSimplified.mtl', function (materials) {\r\n\t\t\t\tmaterials.preload();\r\n\t\t\t\tnew OBJLoader()\r\n\t\t\t\t\t.setMaterials(materials)\r\n\t\t\t\t\t.setZip(zip)\r\n\t\t\t\t\t.load('TexturedMeshSimplified.obj', function (object) {\r\n\t\t\t\t\t\tscene.add(object);\r\n\t\t\t\t\t\tzoomTo(object);\r\n\t\t\t\t\t}, onProgress);\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tloadUGB(zip, zoomTo, scene) {\r\n\r\n\t\tlet _this = this;\r\n\r\n\t\tconst onProgress = function (xhr) {\r\n\r\n\t\t\tif (xhr.lengthComputable) {\r\n\r\n\t\t\t\tconst percentComplete = xhr.loaded / xhr.total * 100;\r\n\t\t\t\tconsole.log(Math.round(percentComplete, 2) + '% downloaded');\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tnew MTLLoader()\r\n\t\t\t.setZip(zip)\r\n\t\t\t.load('TexturedMeshSimplified.mtl', function (materials) {\r\n\t\t\t\tmaterials.preload();\r\n\t\t\t\t// console.log(materials)\r\n\r\n\t\t\t\tconst materialsInfo = materials.materialsInfo; // 获取 materialsInfo 对象\r\n\r\n\t\t\t\tfor (let materialName in materialsInfo) {\r\n\t\t\t\t\tif (materialsInfo.hasOwnProperty(materialName)) {\r\n\t\t\t\t\t\tconst materialMeta = materialsInfo[materialName]; // 获取材质的元数据\r\n\r\n\r\n\t\t\t\t\t\tlet material = materials.materials[materialName];\r\n\r\n\t\t\t\t\t\tmaterial.map.flipY = false\r\n\r\n\t\t\t\t\t\t// Configure and loader\r\n\t\t\t\t\t\tconst loader = new UGBLoader();\r\n\t\t\t\t\t\tloader.setDecoderPath('./libs/encoder/');\r\n\t\t\t\t\t\tloader.setDecoderConfig({ type: 'js' });\r\n\t\t\t\t\t\tloader.setZip(zip);\r\n\r\n\t\t\t\t\t\t// Load UGB file\r\n\t\t\t\t\t\tloader.load('TexturedMeshSimplified_' + materialName + \".drc\", function (geometry) {\r\n\r\n\t\t\t\t\t\t\tconsole.log(materialName)\r\n\t\t\t\t\t\t\tgeometry.computeVertexNormals();\r\n\r\n\t\t\t\t\t\t\t// const material = new THREE.MeshStandardMaterial( { color: 0xa5a5a5 } );\r\n\t\t\t\t\t\t\tconst mesh = new THREE.Mesh(geometry, material);\r\n\t\t\t\t\t\t\t// mesh.castShadow = true;\r\n\t\t\t\t\t\t\t// mesh.receiveShadow = true;\r\n\t\t\t\t\t\t\t_this.#scene.add(mesh);\r\n\r\n\t\t\t\t\t\t\tzoomTo(scene);\r\n\r\n\t\t\t\t\t\t\t// Release decoder resources.\r\n\t\t\t\t\t\t\tloader.dispose();\r\n\r\n\t\t\t\t\t\t}, onProgress);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tloadFromID(recordID, onLoad, onError, onProgress, zoomTo) {\r\n\r\n\t\tlet _this = this;\r\n\t\t_this.onProgress = onProgress;\r\n\t\t_this.zoomTo = zoomTo;\r\n\t\t\r\n\t\tthis.#publicDatabase.fetchRecords(recordID).then(function (response) {\r\n\t\t\t\r\n\t\t\t\tif (response.hasErrors) {\r\n\t\t\t\t\tonError(response.errors[0])\r\n\t\t\t\t} \r\n\t\t\t\telse {\r\n\t\t\t\t\tvar fetchedRecord = response.records[0];\r\n\r\n\t\t\t\t\tvar title = fetchedRecord.fields.title;\r\n\t\t\t\t\tif (null != title) {\t\t\t\t\t\t\r\n\t\t\t\t\t\tonLoad(title.value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet thumbnailAsset = fetchedRecord.fields.thumbnail;\r\n\t\t\t        let thumbnailURL = thumbnailAsset.value.downloadURL;\r\n\r\n\t\t\t\t\tvar modelAsset = fetchedRecord.fields.file;\r\n\t\t\t\t\tvar modelURL = modelAsset.value.downloadURL;\r\n\r\n\t\t\t\t\t_this.downloadZipFromURL(modelURL)\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}).catch(function (error) {\r\n\t\t\t\tconsole.error('Failed to fetch record:', error);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\r\n};\r\n\r\nexport { UGCloud };"],"names":["MTLLoader","Loader","constructor","manager","super","load","url","onLoad","onProgress","onError","scope","this","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setRequestHeader","requestHeader","setWithCredentials","withCredentials","pathName","fileMap","get","zip","file","async","then","text","parse","e","console","error","itemError","setMaterialOptions","value","materialOptions","setZip","Map","files","Object","prototype","hasOwnProperty","call","fileName","substring","lastIndexOf","set","name","lines","split","info","delimiter_pattern","materialsInfo","i","length","line","trim","charAt","pos","indexOf","key","toLowerCase","ss","parseFloat","materialCreator","MaterialCreator","resourcePath","setCrossOrigin","crossOrigin","setManager","setMaterials","setFileMap","baseUrl","options","materials","materialsArray","nameLookup","wrap","undefined","RepeatWrapping","convert","converted","mn","mat","covmat","prop","save","lprop","normalizeRGB","ignoreZeroRGBs","preload","create","getIndex","materialName","getAsArray","index","createMaterial_","params","side","setMapForType","mapType","texParams","getTextureParams","map","loadTexture","repeat","copy","scale","offset","wrapS","wrapT","encoding","sRGBEncoding","n","color","Color","fromArray","convertSRGBToLinear","specular","emissive","transparent","shininess","opacity","invertTrProperty","MeshPhongMaterial","matParams","Vector2","items","bumpScale","splice","join","mapping","texture","Texture","blob","image","Image","src","URL","createObjectURL","needsUpdate","_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_face_vertex_data_separator_pattern","_vA","Vector3","_vB","_vC","_ab","_cb","_color","ParserState","state","objects","object","vertices","normals","colors","uvs","materialLibraries","startObject","fromDeclaration","previousMaterial","currentMaterial","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","material","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","replace","result","trimStart","lineFirstChar","data","setRGB","r","g","vertexData","slice","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","container","Group","concat","isLine","isPoints","hasVertexColors","buffergeometry","BufferGeometry","setAttribute","Float32BufferAttribute","createdMaterials","miLen","sourceMaterial","materialHash","LineBasicMaterial","PointsMaterial","materialPoints","size","sizeAttenuation","Material","materialLine","flatShading","vertexColors","mesh","addGroup","LineSegments","Points","Mesh","add","points","_changeEvent","_startEvent","_endEvent","OrbitControls","EventDispatcher","domElement","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","stopListenToKeyEvents","removeEventListener","saveState","reset","updateProjectionMatrix","dispatchEvent","update","STATE","NONE","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","addScaledVector","panOffset","setFromSpherical","lookAt","multiplyScalar","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","code","handleKeyDown","pointer","passive","_taskCache","WeakMap","UGBLoader","decoderPath","decoderConfig","decoderBinary","decoderPending","workerLimit","workerPool","workerNextTaskID","workerSourceURL","defaultAttributeIDs","normal","uv","defaultAttributeTypes","setDecoderPath","setDecoderConfig","config","setWorkerLimit","_this","buffer","log","decodeDracoFile","SRGBColorSpace","catch","callback","attributeIDs","attributeTypes","vertexColorSpace","LinearSRGBColorSpace","taskConfig","useUniqueIDs","decodeGeometry","taskKey","JSON","stringify","has","cachedTask","promise","byteLength","Error","worker","taskID","taskCost","geometryPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","id","message","_createGeometry","_releaseTask","geometryData","setIndex","BufferAttribute","array","attributes","itemSize","attribute","_assignVertexColorSpace","inputColorSpace","il","count","fromBufferAttribute","setXYZ","_loadLibrary","responseType","setResponseType","_initDecoder","useJS","WebAssembly","librariesPending","all","jsContent","wasmBinary","fn","DRACOWorker","toString","body","Blob","Worker","_taskCosts","_taskLoad","onmessage","sort","debug","terminate","revokeObjectURL","decodeAttribute","draco","decoder","dracoGeometry","attributeName","attributeType","numComponents","num_components","numValues","num_points","BYTES_PER_ELEMENT","dataType","Float32Array","DT_FLOAT32","Int8Array","DT_INT8","Int16Array","DT_INT16","Int32Array","DT_INT32","Uint8Array","DT_UINT8","Uint16Array","DT_UINT16","Uint32Array","DT_UINT32","getDracoDataType","ptr","_malloc","GetAttributeDataArrayForAllPoints","HEAPF32","_free","onModuleLoaded","DracoDecoderModule","module","Decoder","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","DecodeArrayToMesh","POINT_CLOUD","PointCloud","DecodeArrayToPointCloud","ok","error_msg","self","attributeID","GetAttributeByUniqueId","GetAttributeId","GetAttribute","attributeResult","numFaces","num_faces","numIndices","GetTrianglesUInt32Array","decodeIndex","destroy","buffers","attr","UGCloud","token_dev","token_prod","publicDatabase","scene","initConfig","dev","environment","token","CloudKit","DEVELOPMENT_ENVIRONMENT","PRODUCTION_ENVIRONMENT","configure","containers","containerIdentifier","apiTokenAuth","apiToken","getDefaultContainer","publicCloudDatabase","downloadZipFromURL","modelURL","JSZip","fetch","response","contentLength","headers","loaded","reader","getReader","chunks","read","done","fileReader","FileReader","onload","loadAsync","loadUGB","zoomTo","readAsArrayBuffer","loadOBJ","xhr","lengthComputable","percentComplete","total","round","OBJLoader","flipY","computeVertexNormals","THREE","loadFromID","recordID","fetchRecords","hasErrors","errors","fetchedRecord","records","title","fields","thumbnail","downloadURL"],"mappings":"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"}